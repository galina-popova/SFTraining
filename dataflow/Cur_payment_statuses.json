{
	"name": "Cur_payment_statuses",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ING_paymentStatuses",
						"type": "DatasetReference"
					},
					"name": "ingPaymStat"
				},
				{
					"dataset": {
						"referenceName": "ds_cur_paymentStauses",
						"type": "DatasetReference"
					},
					"name": "CurPaymStat"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_cur_paymentStauses",
						"type": "DatasetReference"
					},
					"name": "CurPaymStatusesInsertNew"
				}
			],
			"transformations": [
				{
					"name": "RecDoesnExists"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PaymentStatusId as integer,",
				"          PaymentStatusName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ingPaymStat",
				"source(output(",
				"          PaymentStatusId as integer,",
				"          PaymentStatusName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CurPaymStat",
				"ingPaymStat, CurPaymStat exists(ingPaymStat@PaymentStatusName == CurPaymStat@PaymentStatusName,",
				"     negate:true,",
				"     broadcast: 'auto')~> RecDoesnExists",
				"RecDoesnExists sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PaymentStatusId as integer,",
				"          PaymentStatusName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> CurPaymStatusesInsertNew"
			]
		}
	}
}